{"version":3,"sources":["Clothing.ts","Consts.ts","ClothingPreview.tsx","AttributeSearch.tsx","SuggestionPreviewer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SuitItem","SuitItems","Jacket","Pants","Shirt","Shoes","getName","item","AttributeTag","Field","Type","Number","String","Fabric","other","this","id","PerSuitItemData","defaultValue","checkDataEqualityFunction","me","set","key","value","get","Map","PerSuitItemFabrics","equals","endpointUrl","maskPaths","keys","suitItem","toLowerCase","SuitPreview","props","state","viewPortCanvas","viewPort","camera","renderer","controls","scene","clothesObj","render","bind","recenterCamera","handleResize","loading","className","ref","style","display","path","loader","TextureLoader","Promise","resolve","reject","load","texture","ex","THREE","position","zoom","background","a","OBJLoader","obj","bodyObj","bodyMat","color","metalness","traverse","child","material","translateY","add","light","canvas","antialias","precision","powerPreference","setPixelRatio","window","devicePixelRatio","setSize","TrackballControls","domElement","rotateSpeed","zoomSpeed","panSpeed","staticMoving","dynamicDampingFactor","addEventListener","enabled","update","setInterval","updateProjectionMatrix","aspect","clientWidth","clientHeight","bb","setFromObject","getCenter","target","fabrics","setState","promisifyLoadTexture","mat","map","name","React","Component","AttributeSearchBox","tags","suggestions","handleDelete","handleAddition","placeholder","allowNew","autoresize","i","slice","splice","onChange","tag","concat","RecommendationSuitPartDisplay","backgroundImage","recommendation","url","RecommendationDisplay","hover","selected","onMouseOver","e","onMouseLeave","onClick","si","RecommendationsCarousel","previouslyClickedElement","selection","items","recommendations","onSelectionChanged","length","App","clothingPreview","refreshSuggestions","handleSelectedTagsChange","selectedAttributes","selectedSuggestion","activeSuggestion","attributes","width","height","justifyContent","suggestion","updateFabrics","attrs","attr","push","Part","AdjectiveId","fetch","method","body","JSON","stringify","headers","response","ok","console","error","statusText","text","json","recJsonObj","rec","deserialize","jsonSubObj","part","newTags","newSelectedAttributes","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.947ec2bf.chunk.js","sourcesContent":["import {Field, Type} from 'serialize-ts';\r\n\r\nenum SuitItem {\r\n    None = 0,\r\n    Jacket = 1,\r\n    Pants = 2,\r\n    Shirt = 4,\r\n    Shoes = 8\r\n}\r\n\r\nconst SuitItems: SuitItem[] = [SuitItem.Jacket, SuitItem.Pants, SuitItem.Shirt, SuitItem.Shoes];\r\n\r\nfunction getName(item: SuitItem): string {\r\n    switch (item) {\r\n        case SuitItem.Jacket:\r\n            return \"Jacket\";\r\n        case SuitItem.Pants:\r\n            return \"Pants\";\r\n        case SuitItem.Shirt:\r\n            return \"Shirt\";\r\n        case SuitItem.Shoes:\r\n            return \"Shoes\";\r\n    }\r\n}\r\n\r\nclass AttributeTag {\r\n    @Field()\r\n    @Type(Number)\r\n    id: number = 0;\r\n\r\n    @Field()\r\n    @Type(String)\r\n    name: string;\r\n\r\n    @Field()\r\n    @Type(String)\r\n    type: string;\r\n}\r\n\r\nclass Fabric {\r\n    @Field()\r\n    @Type(Number)\r\n    id: number = 0;\r\n\r\n    @Field()\r\n    @Type(String)\r\n    name: string;\r\n\r\n    @Field()\r\n    @Type(String)\r\n    url: string;\r\n\r\n    @Field()\r\n    @Type(Number)\r\n    appliesTo: SuitItem;\r\n\r\n    @Field()\r\n    @Type(Number)\r\n    scale: number;\r\n\r\n    equals(other: Fabric) {\r\n        return other != null && this.id === other.id;\r\n    }\r\n}\r\n\r\nclass PerSuitItemData<T> extends Map<SuitItem, T> {\r\n    constructor(defaultValue: T = null) {\r\n        super(null);\r\n        this.set(SuitItem.Jacket, defaultValue);\r\n        this.set(SuitItem.Pants, defaultValue);\r\n        this.set(SuitItem.Shirt, defaultValue);\r\n        this.set(SuitItem.Shoes, defaultValue);\r\n    }\r\n\r\n    checkDataEqualityFunction: (me: T, other: T) => boolean = (me, other) => me === other;\r\n\r\n    equals(other: PerSuitItemData<T>) {\r\n        if (other == null)\r\n            return false;\r\n\r\n        for (var [key, value] of this)\r\n            if (!this.checkDataEqualityFunction(value, other.get(key)))\r\n                return false;\r\n        \r\n        return true;\r\n    }\r\n}\r\n\r\nclass PerSuitItemFabrics extends PerSuitItemData<Fabric> {\r\n    constructor() {\r\n        super(null);\r\n        this.checkDataEqualityFunction = (me, other) => me != null && me.equals(other);\r\n    }\r\n}\r\n\r\nexport {AttributeTag, Fabric, PerSuitItemData, SuitItem, PerSuitItemFabrics, getName, SuitItems}","const endpointUrl = \"https://recengine.azurewebsites.net\";\r\n\r\nexport {endpointUrl};","import React from 'react';\nimport './ClothingPreview.css';\nimport * as THREE from 'three';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport {TrackballControls} from \"three/examples/jsm/controls/TrackballControls\";\nimport { TextureLoader } from 'three';\nimport { PerSuitItemData, PerSuitItemFabrics, getName, SuitItem } from './Clothing';\nimport { endpointUrl } from './Consts';\n\nconst maskPaths = new PerSuitItemData<string>(\"\");\nfor (var suitItem of maskPaths.keys())\n  maskPaths.set(suitItem, getName(suitItem).toLowerCase() + \"_mask.jpg\");\nconst shadingPath = \"shading.jpg\";\n\nclass SuitPreview extends React.Component<{}, {loading: boolean}> {\n  constructor(props, state) {\n    super(props, state);\n\n    this.render = this.render.bind(this);\n    this.recenterCamera = this.recenterCamera.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n    this.state = {\n      loading: false\n    }\n  }\n\n  viewPortCanvas: HTMLCanvasElement;\n  viewPort: HTMLDivElement;\n  camera: THREE.PerspectiveCamera;\n  renderer: THREE.WebGLRenderer;\n  controls: TrackballControls;\n  scene: THREE.Scene;\n  clothesObj: THREE.Object3D;\n\n  render() {\n    return (\n      <div className=\"SuitPreview\">\n        <div className=\"ThreeJsViewPort\" ref={ref => this.viewPort = ref} style={this.state.loading ? {display: \"none\"} : {}}>\n          <canvas className=\"ViewPort\" ref={ref => this.viewPortCanvas = ref}></canvas>\n        </div>\n        <div style={this.state.loading ? {} : {display: \"none\"}} className=\"lds-circle\"><div></div></div>\n      </div>\n    );\n  }\n\n  async promisifyLoadTexture(path: string): Promise<THREE.Texture> {\n    var loader = new TextureLoader();\n    return new Promise<THREE.Texture>((resolve, reject) => {\n      loader\n        .load(path, (texture) => {\n          try {\n            resolve(texture);\n          } catch (ex) {\n            reject(ex);\n          }\n        })\n    });\n  }\n\n  async componentDidMount() {\n    // Set up the camera\n    this.camera = new THREE.PerspectiveCamera(50, 1, 1, 10000);\n    var scaleFactor = 1000/500;\n    this.camera.position.set(300 / scaleFactor, 300 / scaleFactor, 500 / scaleFactor);\n    this.camera.zoom = 1.8;\n\n    // Set up the scene\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(0x909090);\n    // this.scene.background = new THREE.Color(0xf0f0f0);\n\n    // Load the body object\n    var bodyObj = await new Promise<THREE.Object3D>(async (resolve, reject) => {\n      try {\n        new OBJLoader()\n          .load(\"smoothed_headless_man_no_low_half.obj\", (obj) => {\n            resolve(obj);\n          });\n      } catch(ex) {\n        reject(ex);\n      }\n    });\n\n    // Load the body mat onto the body\n    var bodyMat = new THREE.MeshPhysicalMaterial({color: new THREE.Color(\"white\"), metalness: 0.3});\n    bodyObj.traverse(child => {\n      if (child instanceof THREE.Mesh)\n        child.material = bodyMat;\n    });\n    bodyObj.translateY(0.441);\n\n    // Add the body into the scene\n    this.scene.add(bodyObj);\n\n    // Load the clothes object\n    this.clothesObj = await new Promise<THREE.Object3D>(async (resolve, reject) => {\n      try {\n        new OBJLoader()\n          .load(\"clothes_smoothed.obj\", (obj) => {\n            resolve(obj);\n          });\n      } catch(ex) {\n        reject(ex);\n      }\n    });\n    \n    // Load a material onto the body\n    this.scene.add(this.clothesObj);\n\n    // Set up the lighting of the scene\n    this.scene.add(new THREE.AmbientLight(0x9b9b9b));\n    var light = new THREE.SpotLight(0x9b9b9b)\n    light.position.set(300, 300, 300);\n    this.scene.add(light);\n\n    // Set up the render\n    var width = 800;\n    var height = 800;\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.viewPortCanvas,\n      antialias: true,\n      precision: \"lowp\",\n      powerPreference: \"high-performance\",\n    });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(width, height, true);\n\n    // Set up the controls to center the camera on the target object\n    this.controls = new TrackballControls(this.camera, this.renderer.domElement);\n    this.controls.rotateSpeed = 5.0;\n    this.controls.zoomSpeed = 4;\n    this.controls.panSpeed = 0.8;\n    this.controls.staticMoving = true;\n    this.controls.dynamicDampingFactor = 0.3;\n    this.controls.keys = [ 65, 83, 68 ];\n    this.controls.addEventListener('change', () => this.renderer.render(this.scene, this.camera));\n    this.controls.enabled = true;\n    this.controls.update();\n\n    this.recenterCamera();\n\n    // Setup resize handling\n    window.addEventListener(\"resize\", this.handleResize, false)\n    this.handleResize();\n\n    // Render the final scene\n    setInterval(() => {\n      this.controls.update();\n      this.camera.updateProjectionMatrix();\n      this.renderer.render(this.scene, this.camera);\n    }, 10);\n  }\n\n  handleResize() {\n    this.camera.aspect = this.viewPort.clientWidth / this.viewPort.clientHeight;\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(this.viewPort.clientWidth, this.viewPort.clientHeight)\n  }\n\n  recenterCamera() {\n    var bb = new THREE.Box3();\n    bb.setFromObject(this.clothesObj);\n    bb.getCenter(this.controls.target);\n  }\n\n  async updateFabrics(fabrics: PerSuitItemFabrics) {\n    this.setState({loading: true});\n    var texture = await this.promisifyLoadTexture(endpointUrl \n      + \"/fabric\"\n      + \"/\" + fabrics.get(SuitItem.Jacket).id\n      + \"/\" + fabrics.get(SuitItem.Shirt).id\n      + \"/\" + fabrics.get(SuitItem.Pants).id\n      + \"/\"  + fabrics.get(SuitItem.Shoes).id);\n    var mat = new THREE.MeshLambertMaterial({map: texture});\n    this.clothesObj.traverse(child => {\n      if (child instanceof THREE.Mesh && child.name !== \"man_body\")\n          child.material = mat;\n    });\n    this.recenterCamera();\n    this.setState({loading: false});\n  }\n}\n\nexport default SuitPreview;\n","import React from 'react';\nimport './AttributeSearch.css'\nimport { AttributeTag, getName, SuitItem } from './Clothing';\nimport { Col } from 'react-grid-system';\nimport ReactTags from 'react-tag-autocomplete'\n\nclass AttributeSearchBox extends React.Component<{suggestions: AttributeTag[], onChange: (attrs: AttributeTag[]) => void, suitItem: SuitItem}, {tags: AttributeTag[]}> {\n  constructor(props, state) {\n    super(props, state);\n    this.state = {\n      tags: []\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <Col className=\"Col\">{getName(this.props.suitItem)}</Col> <br/>\n        <Col className=\"Col\">\n          <ReactTags\n            tags={this.state.tags}\n            suggestions={this.props.suggestions}\n            handleDelete={this.handleDelete.bind(this)}\n            handleAddition={this.handleAddition.bind(this)} \n            placeholder={`Enter ${getName(this.props.suitItem)} Attributes`}\n            allowNew={false}\n            autoresize={false}/>\n        </Col>\n      </div>\n    )\n  }\n \n  handleDelete (i: number) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(i, 1);\n    this.setState({ tags: tags });\n    this.props.onChange(tags);\n  }\n \n  handleAddition (tag: AttributeTag) {\n    for (var existingTag of this.state.tags)\n      if (existingTag.id === tag.id)\n        return;\n    const tags = [].concat(this.state.tags, tag);\n    this.setState({ tags: tags });\n    this.props.onChange(tags);\n  }\n}\n\nexport default AttributeSearchBox;\n","import React from 'react';\nimport './SuggestionPreviewer.css';\nimport { Col, Row } from \"react-grid-system\";\nimport { SuitItem, PerSuitItemFabrics, SuitItems, getName } from './Clothing';\n\nclass RecommendationSuitPartDisplay extends React.Component<{suitItem: SuitItem, recommendation: PerSuitItemFabrics}, {}> {\n  render() {\n    return (\n      <div className=\"RecommendationSuitPartDisplay\" style={{backgroundImage: 'url(' + this.props.recommendation.get(this.props.suitItem).url + ')'}}>\n        <div className=\"TextBackdrop\">\n          <h3>{getName(this.props.suitItem)}</h3>\n          <p>{this.props.recommendation.get(this.props.suitItem).name}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RecDisplayState {\n  hover: boolean\n}\n\nclass RecDisplayProps {\n  recommendation: PerSuitItemFabrics;\n  onClick: () => void;\n  selected: boolean;\n}\n\nclass RecommendationDisplay extends React.Component<RecDisplayProps, RecDisplayState> {\n  constructor(props: RecDisplayProps, state: RecDisplayState) {\n    super(props, state);\n    this.state = {\n      hover: false\n    };\n  }\n\n  render() {\n    return (\n      <Col className={\"Recommendation\" + (this.props.selected ? \" Selected\" : \"\") + (this.state.hover && !this.props.selected ? \" Hover\" : \"\")} \n      onMouseOver={(e) => this.setState({hover: true})} onMouseLeave={() => this.setState({hover: false})} onClick={this.props.onClick}>\n        {SuitItems.map(si => (<RecommendationSuitPartDisplay recommendation={this.props.recommendation} suitItem={si} key={si}/>))}\n      </Col>\n    );\n  }\n}\n\nclass RecommendationsCarousel extends React.Component<{recommendations: PerSuitItemFabrics[], onSelectionChanged: (recommendation: PerSuitItemFabrics) => void}, {selection: PerSuitItemFabrics}> {\n  constructor(props, state) {\n    super(props, state);\n    this.state = {\n      selection: null\n    };\n  }\n  previouslyClickedElement: HTMLDivElement = null;\n\n  render() {\n    var items = this.props.recommendations.map(recommendation => {\n      var key = \"\";\n      for (var si of recommendation.keys())\n        key += `${getName(si)}: ${recommendation.get(si).name}`;\n      return (\n        <Row key={key} className=\"Row\">\n          <Col className=\"Col\">\n            <RecommendationDisplay recommendation={recommendation}\n            selected={this.state.selection != null && this.state.selection.equals(recommendation)}\n            onClick={() => {\n              this.props.onSelectionChanged(recommendation);\n              this.setState({selection: recommendation});\n            }}/>\n            {recommendation === this.props.recommendations[this.props.recommendations.length - 1] ? (<br/>) : (<div><br/><hr/><br/></div>)}\n          </Col>\n        </Row>\n      )\n    });\n    return (<div className=\"RecommendationsCarousel HorizontalScrollContainer\"><Col>{items}</Col></div>);\n  }\n}\n\nexport {RecommendationsCarousel, RecommendationDisplay};","import React from 'react';\nimport './App.css';\nimport ClothingPreview from './ClothingPreview';\nimport AttributeSearchBox from './AttributeSearch';\nimport {RecommendationsCarousel} from './SuggestionPreviewer'\nimport {PerSuitItemData, AttributeTag, SuitItem, Fabric, PerSuitItemFabrics, SuitItems, getName} from './Clothing';\nimport {endpointUrl} from './Consts';\nimport {deserialize} from 'serialize-ts';\nimport {Row, Col} from 'react-grid-system';\n\nclass AppState {\n  activeSuggestion: PerSuitItemFabrics;\n  selectedSuggestion: PerSuitItemFabrics;\n  recommendations: PerSuitItemFabrics[];\n  attributes: AttributeTag[];\n  selectedAttributes: PerSuitItemData<AttributeTag[]>;\n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props, state) {\n    super(props, state);\n    this.refreshSuggestions = this.refreshSuggestions.bind(this);\n    this.handleSelectedTagsChange = this.handleSelectedTagsChange.bind(this);\n    this.state = {\n      selectedAttributes: new PerSuitItemData<AttributeTag[]>([]),\n      selectedSuggestion: new PerSuitItemFabrics(),\n      activeSuggestion: new PerSuitItemFabrics(),\n      attributes: [],\n      recommendations: []\n    };\n  }\n\n  clothingPreview: ClothingPreview;\n\n  render() {\n    return (\n      <Row className=\"App\">\n        <Col className=\"Col\">\n          {SuitItems.map(si => (<AttributeSearchBox key={getName(si)} suggestions={this.state.attributes} onChange={tags => this.handleSelectedTagsChange(si, tags)} suitItem={si}/>))}\n          <button className=\"RerollButton\" onClick={e => this.refreshSuggestions()}> Reroll Suggestions </button>\n          <div style={{width: '100%', height: '100%', justifyContent: 'center'}}>\n            <RecommendationsCarousel recommendations={this.state.recommendations} onSelectionChanged={suggestion => {\n              this.setState({selectedSuggestion: suggestion});\n              this.clothingPreview.updateFabrics(suggestion);\n            }}/>\n          </div>\n        </Col>\n        <Col className=\"Col\">\n          <ClothingPreview ref={ref => this.clothingPreview = ref}/>\n        </Col>\n      </Row>\n    );\n  }\n\n  async refreshSuggestions() {\n    // Build the body for the new reccomendation request\n    var attrs: any[] = [];\n    for(var [suitItem, attributes] of this.state.selectedAttributes)\n      for (let attr of attributes)\n        attrs.push({Part: suitItem, AdjectiveId: attr.id});\n\n    var response = await fetch(`${endpointUrl}/recommendations/${5}`, {method: \"POST\", body: JSON.stringify(attrs), headers: [[\"accept\", \"text/plain\"], [\"Content-Type\", \"application/json\"]]});\n    if (!response.ok) {\n      console.error(response.statusText);\n      console.error(await response.text());\n      return;\n    }\n    var json = await response.json();\n    var recommendations: PerSuitItemFabrics[] = [];\n    for (var recJsonObj of json) {\n      var rec = new PerSuitItemFabrics();\n      for (var si of rec.keys())\n        rec.set(si, deserialize(recJsonObj[getName(si).toLowerCase()], Fabric));\n      recommendations.push(rec);\n    }\n\n    this.setState({recommendations: recommendations});\n  }\n\n  async componentDidMount() {\n    // Get all attribute tags\n    var response = await fetch(endpointUrl + \"/adjectives\", {method: \"GET\"});\n    var json = await response.json();\n    var attrs: AttributeTag[] = [];\n    for (var jsonSubObj of json)\n      attrs.push(deserialize(jsonSubObj, AttributeTag));\n    this.setState({attributes: attrs});\n    this.handleSelectedTagsChange(SuitItem.Jacket, []);\n  }\n\n  async handleSelectedTagsChange(part: SuitItem, newTags: AttributeTag[]) {\n    // Update the selected attributes\n    var newSelectedAttributes = this.state.selectedAttributes;\n    newSelectedAttributes.set(part, newTags);\n\n    // Update the state to force a redraw\n    this.setState({selectedAttributes: newSelectedAttributes});\n\n    // Refresh the suggestions for the first time\n    this.refreshSuggestions();\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}